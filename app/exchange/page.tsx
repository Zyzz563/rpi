'use client';

import { useState, useEffect, useRef, useMemo, useCallback } from 'react';
import dynamic from 'next/dynamic';
import { FaExchangeAlt, FaArrowDown, FaArrowUp, FaChartLine, FaSyncAlt, FaInfo, FaSkull, FaDatabase } from 'react-icons/fa';
import PortalCursor from '../../components/PortalCursor';
import RickTransactions from '@/components/RickTransactions';
import PickleRick from '@/components/PickleRick';

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç ApexCharts
const Chart = dynamic(() => import('react-apexcharts'), { ssr: false });

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è —Ç–æ–∫–µ–Ω–∞
type Token = {
  id: string;
  binanceSymbol: string | null; // –ò—Å–ø–æ–ª—å–∑—É–µ–º binanceSymbol –¥–ª—è Binance Futures API
  name: string;
  symbol: string;
  balance: string;
  price: number;
  priceChange24h?: number;
  // –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
  previousPrice?: number;
  animating?: boolean;
  dimension?: string; // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ—Ä–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
};

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Å–≤–µ—á–∏ (–ø–∏–Ω-–±–∞—Ä–∞)
type CandleData = {
  time: number; // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  open: number; // –¶–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è
  close: number; // –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
  high: number; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
  low: number; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
  volume?: number; // –û–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
};

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è Binance Futures
type BinanceWebSocketMessage = {
  e: string;         // –¢–∏–ø —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "aggTrade")
  s: string;         // –°–∏–º–≤–æ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, "BTCUSDT")
  p: string;         // –¶–µ–Ω–∞ (—Å—Ç—Ä–æ–∫–∞)
  q: string;         // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (—Å—Ç—Ä–æ–∫–∞)
  T: number;         // –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  m: boolean;        // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –º–∞—Ä–∫–µ—Ç-–º–µ–π–∫–µ—Ä–æ–º
  a: number;         // ID —Å–¥–µ–ª–∫–∏
};

// –°—Ç–∞—Ä—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
type WebSocketMessage = {
  type: string;
  data: {
    symbol: string;
    price: number;
    time: number;
  };
};

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω–æ–≤ —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –¥–ª—è Binance Futures API
const initialTokens: Token[] = [
  { id: 'flurbos', binanceSymbol: null, name: 'Flurbos', symbol: 'FLB', balance: '42069.00', price: 0.0042, dimension: 'C-137' },
  { id: 'eth', binanceSymbol: 'ETHUSDT', name: 'Ethereum', symbol: 'ETH', balance: '0.85', price: 0, dimension: 'D-99' },
  { id: 'btc', binanceSymbol: 'BTCUSDT', name: 'Bitcoin', symbol: 'BTC', balance: '0.0042', price: 0, dimension: 'J-19-Zeta-7' },
  { id: 'usdt', binanceSymbol: null, name: 'Schmeckles', symbol: 'SCHM', balance: '1337.00', price: 1.00, dimension: 'Citadel of Ricks' },
  { id: 'plumbus', binanceSymbol: null, name: 'Plumbus', symbol: 'PLB', balance: '6.00', price: 6.00, dimension: 'Dimension 35-C' },
  { id: 'meeseeks', binanceSymbol: null, name: 'Meeseeks', symbol: 'SEEK', balance: '2.00', price: 4.20, dimension: 'Box Dimension' },
];

// Global chart data cache to improve performance
const chartDataCache: Record<string, any> = {};

// –ù–æ–≤–∞—è —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ª—É—á—à–µ–π —Ä–∞–±–æ—Ç–æ–π CSR –∏ –∑–∞–ø–∞—Å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
const CandleStickChart = ({ options, series, height }: { options: any, series: any[], height: number }) => {
  const [isClient, setIsClient] = useState(false);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  useEffect(() => {
    setIsClient(true);
  }, []);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const hasValidData = useMemo(() => {
    return Boolean(series && 
      series.length && 
      series[0] && 
      series[0].data && 
      series[0].data.length > 0);
  }, [series]);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (!isClient) {
    return (
      <div className="h-64 w-full bg-[#1d111f] rounded flex items-center justify-center portal-background">
        <div className="text-[#5cff32]">
          <svg className="animate-spin h-8 w-8 mr-2 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
            <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span>–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –ø–æ—Ä—Ç–∞–ª—å–Ω–æ–π –ø—É—à–∫–∏...</span>
        </div>
      </div>
    );
  }
  
  // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤—ã
  if (!hasValidData) {
    return (
      <div className="h-64 w-full bg-[#1d111f] rounded flex items-center justify-center portal-background">
        <div className="text-[#5cff32]">
          <svg className="animate-spin h-8 w-8 mr-2 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
            <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <span>–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –≤ –º–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º –∫–∞–±–µ–ª–µ...</span>
        </div>
      </div>
    );
  }
  
  // –ï—Å–ª–∏ –º—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –∏ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
  return (
    <div className="chart-container portal-border">
      {typeof window !== 'undefined' && (
        <Chart
          options={{
            ...options,
            chart: {
              ...(options.chart || {}),
              animations: {
                enabled: true,
                easing: 'easeinout',
                speed: 800,
                animateGradually: {
                  enabled: true,
                  delay: 150
                },
                dynamicAnimation: {
                  enabled: true,
                  speed: 350
                }
              },
              background: '#1d111f',
              foreColor: '#5cff32',
              fontFamily: "'Rajdhani', 'Trebuchet MS', sans-serif",
            }
          }}
          series={series}
          type="candlestick"
          height={height}
          width="100%"
        />
      )}
    </div>
  );
};

// –î–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç –∏ –∏—Ö –∫—É—Ä—Å—ã
const currencies = [
  { code: 'USD', name: '–î–æ–ª–ª–∞—Ä –°–®–ê', flag: 'üá∫üá∏', rickName: '–ë—É–º–∞–≥–∞ –±–µ–∑ —Ü–µ–Ω–Ω–æ—Å—Ç–∏' },
  { code: 'EUR', name: '–ï–≤—Ä–æ', flag: 'üá™üá∫', rickName: '–ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è –±—É–º–∞–≥–∞' },
  { code: 'GBP', name: '–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤', flag: 'üá¨üáß', rickName: '–û—Å—Ç—Ä–æ–≤–Ω–æ–π –º—É—Å–æ—Ä' },
  { code: 'JPY', name: '–Ø–ø–æ–Ω—Å–∫–∞—è –π–µ–Ω–∞', flag: 'üáØüáµ', rickName: '–ê–∑–∏–∞—Ç—Å–∫–∏–µ —Ñ–∞–Ω—Ç–∏–∫–∏' },
  { code: 'RUB', name: '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å', flag: 'üá∑üá∫', rickName: '–ú–µ–¥–≤–µ–∂—å–∏ –±—É–º–∞–∂–∫–∏' },
  { code: 'CNY', name: '–ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å', flag: 'üá®üá≥', rickName: '–î—Ä–∞–∫–æ–Ω—å–∏ –º–æ–Ω–µ—Ç–∫–∏' },
  { code: 'FLB', name: 'Flurbos', flag: 'üåÄ', rickName: '–ù–∞—Å—Ç–æ—è—â–∏–µ –¥–µ–Ω—å–≥–∏' },
  { code: 'BMB', name: '–ë–ª–∏–ø—Å –∏ –ß–∏—Ç—Ü—ã', flag: 'üéÆ', rickName: '–í–∞–ª—é—Ç–∞ –ø–ª–µ–±–µ–µ–≤' },
  { code: 'GZR', name: '–ì–∞–∑–æ—Ä–ø–∞–∑–æ—Ä–ø', flag: 'üëΩ', rickName: '–î–µ–Ω—å–≥–∏ –Ω–∞—Å–µ–∫–æ–º—ã—Ö' },
  { code: 'SCH', name: '–®–º–µ–∫–µ–ª–∏', flag: 'üí∞', rickName: '–ö–∞—Ä–º–∞–Ω–Ω–∞—è –º–µ–ª–æ—á—å' },
];

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã –¥–ª—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
type ExchangeRates = {
  [fromCurrency: string]: {
    [toCurrency: string]: number;
  };
};

type RateDirections = {
  [fromCurrency: string]: {
    [toCurrency: string]: 'up' | 'down';
  };
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫—É—Ä—Å–∞
const getRandomRate = (base = 1, trend = 0): number => {
  const randomFactor = 0.9 + Math.random() * 0.2; // –û—Ç 0.9 –¥–æ 1.1
  const trendFactor = trend * (0.01 + Math.random() * 0.03); // –¢—Ä–µ–Ω–¥ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–µ–ª–∏—á–∏–Ω—É –∏–∑–º–µ–Ω–µ–Ω–∏—è
  return base * (randomFactor + trendFactor);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –æ–±–º–µ–Ω–∞
const generateExchangeRates = (): ExchangeRates => {
  const rates: ExchangeRates = {};
  currencies.forEach(fromCurrency => {
    rates[fromCurrency.code] = {};
    currencies.forEach(toCurrency => {
      if (fromCurrency.code === toCurrency.code) {
        rates[fromCurrency.code][toCurrency.code] = 1;
      } else if (fromCurrency.code === 'FLB') {
        // Flurbos –∏–º–µ—é—Ç –≤—ã—Å–æ–∫–∏–π –∫—É—Ä—Å –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –¥—Ä—É–≥–∏–º –≤–∞–ª—é—Ç–∞–º
        rates[fromCurrency.code][toCurrency.code] = getRandomRate(50, 1);
      } else if (toCurrency.code === 'FLB') {
        // –î—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã –∏–º–µ—é—Ç –Ω–∏–∑–∫–∏–π –∫—É—Ä—Å –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ Flurbos
        rates[fromCurrency.code][toCurrency.code] = getRandomRate(0.02, -1);
      } else {
        // –°–ª—É—á–∞–π–Ω—ã–µ –∫—É—Ä—Å—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–∞—Ä
        rates[fromCurrency.code][toCurrency.code] = getRandomRate();
      }
    });
  });
  return rates;
};

const ExchangePage = () => {
  const [fromCurrency, setFromCurrency] = useState<string>('FLB');
  const [toCurrency, setToCurrency] = useState<string>('SCH');
  const [amount, setAmount] = useState<number>(100);
  const [exchangeRates, setExchangeRates] = useState<ExchangeRates>({});
  const [result, setResult] = useState<number>(0);
  const [loading, setLoading] = useState(true);
  const [rickMode, setRickMode] = useState(false);
  const [showRickTip, setShowRickTip] = useState(false);
  const [glitchEffect, setGlitchEffect] = useState(false);
  const [rateDirection, setRateDirection] = useState<RateDirections>({});
  const [showPickleRick, setShowPickleRick] = useState<boolean>(false);
  const [showTransactionDetails, setShowTransactionDetails] = useState<boolean>(false);
  const [selectedTransaction, setSelectedTransaction] = useState<any>(null);
  const chartRef = useRef<HTMLDivElement>(null);
  const [chartPeriod, setChartPeriod] = useState('24h');
  const [isChartLoading, setIsChartLoading] = useState(true);
  const [isLoading, setIsLoading] = useState(true);
  const [chartOptions, setChartOptions] = useState<any>(null);
  const [chartSeries, setChartSeries] = useState<any[]>([]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤
  useEffect(() => {
    // –ù–∞—á–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã
    const initRates = generateExchangeRates();
    setExchangeRates(initRates);
    
    // –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const initialDirections: RateDirections = {};
    Object.keys(initRates).forEach(from => {
      initialDirections[from] = {};
      Object.keys(initRates[from]).forEach(to => {
        initialDirections[from][to] = Math.random() > 0.5 ? 'up' : 'down';
      });
    });
    setRateDirection(initialDirections);
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    const interval = setInterval(() => {
      const oldRates = exchangeRates;
      const newRates = generateExchangeRates();
      setExchangeRates(newRates);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      const newDirections: RateDirections = {};
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∫—É—Ä—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã
      Object.keys(newRates).forEach(from => {
        newDirections[from] = newDirections[from] || {};
        Object.keys(newRates[from]).forEach(to => {
          if (oldRates[from] && oldRates[from][to]) {
            newDirections[from][to] = newRates[from][to] > oldRates[from][to] ? 'up' : 'down';
          } else {
            newDirections[from][to] = Math.random() > 0.5 ? 'up' : 'down';
          }
        });
      });
      
      setRateDirection(newDirections);
      setGlitchEffect(true);
      setTimeout(() => setGlitchEffect(false), 300);
    }, 15000);
    
    return () => clearInterval(interval);
  }, []);

  // –ü–µ—Ä–µ—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±–º–µ–Ω–∞
  useEffect(() => {
    if (!loading) {
      calculateExchange(amount, fromCurrency, toCurrency, exchangeRates);
    }
  }, [amount, fromCurrency, toCurrency, exchangeRates]);

  // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –æ–±–º–µ–Ω–∞
  const calculateExchange = (amount: number, from: string, to: string, rates: ExchangeRates): number => {
    if (rates[from] && rates[from][to]) {
      const rate = rates[from][to];
      let calculatedResult = amount * rate;
      
      // –° —à–∞–Ω—Å–æ–º 30% –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π —Å–ª—É—á–∞–π–Ω—ã–π –±–æ–Ω—É—Å –¥–ª—è –†–∏–∫–∞
      if (rickMode && Math.random() < 0.3) {
        calculatedResult *= 0.95 + Math.random() * 0.05; // 5% —Å–∫—Ä—ã—Ç–∞—è –∫–æ–º–∏—Å—Å–∏—è
      }
      
      return calculatedResult;
    }
    return 0;
  };

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∞–ª—é—Ç
  const swapCurrencies = () => {
    const temp = fromCurrency;
    setFromCurrency(toCurrency);
    setToCurrency(temp);
    setResult(0);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –†–∏–∫–∞
  const toggleRickMode = () => {
    setRickMode(!rickMode);
    setGlitchEffect(true);
    setTimeout(() => setGlitchEffect(false), 200);
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–µ–ª–∫–∏
  const getDirection = (from: string, to: string): 'up' | 'down' => {
    if (rateDirection[from] && rateDirection[from][to]) {
      return rateDirection[from][to];
    }
    return 'up';
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  const handleTransactionSelect = (transaction: any) => {
    setSelectedTransaction(transaction);
    setShowTransactionDetails(true);
    
    // –ï—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ç–µ–Ω–µ–≤–∞—è –∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ –∑–ª–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Pickle Rick
    if (transaction.isShady && rickMode) {
      setShowPickleRick(true);
      setTimeout(() => setShowPickleRick(false), 5000);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = parseFloat(e.target.value);
    if (!isNaN(value)) {
      setAmount(value);
      if (exchangeRates[fromCurrency] && exchangeRates[fromCurrency][toCurrency]) {
        const calculatedResult = calculateExchange(value, fromCurrency, toCurrency, exchangeRates);
        setResult(calculatedResult);
      }
    } else {
      setAmount(0);
      setResult(0);
    }
  };

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–º–µ—Ä–µ–Ω–∏—è–º–∏
  const getDimensionColor = (dimensionId: string): string => {
    const dimensions: Record<string, string> = {
      'c137': '#5cff32',
      'c500a': '#36c5f4',
      'j1977': '#ff36ab',
      'fb788': '#f7aa33',
      'd716': '#a04ff7',
      'k222': '#00b8a3',
      'n/a': '#ff5252'
    };
    return dimensions[dimensionId] || '#ff5252';
  };
  
  const getDimensionName = (dimensionId: string): string => {
    const dimensions: Record<string, string> = {
      'c137': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ C-137',
      'c500a': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ C-500A',
      'j1977': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ J-1977',
      'fb788': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ FB-788',
      'd716': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ D-716',
      'k222': '–¶–∏—Ç–∞–¥–µ–ª—å –†–∏–∫–æ–≤',
      'n/a': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ'
    };
    return dimensions[dimensionId] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ';
  };

  return (
    <div className={`min-h-screen bg-[#1d111f] text-white portal-background ${glitchEffect ? 'animate-portal-glitch' : ''} crt-effect`}>
      {/* –§–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute inset-0 bg-[#1d111f] bg-opacity-80 z-0"></div>
        <div className="absolute inset-0 bg-portal-grid opacity-20 z-1 scan-lines"></div>
      </div>

      <div className="relative py-12 z-10">
        <div className="container mx-auto px-4">
          <h1 className="text-5xl md:text-6xl font-mono font-bold mb-6 text-center text-[#5cff32] portal-glow rick-glitch" data-text="–ú–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –û–±–º–µ–Ω">
            –ú–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –û–±–º–µ–Ω
          </h1>
          <p className="text-xl text-center mb-12 text-[#ff36ab]">
            {rickMode ? 
              "–û–±–º–µ–Ω–∏–≤–∞–π —Å–≤–æ—é –±–µ—Å–ø–æ–ª–µ–∑–Ω—É—é –≤–∞–ª—é—Ç—É –Ω–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–µ–Ω—å–≥–∏ - Flurbos!" : 
              "–ë—ã—Å—Ç—Ä—ã–π –∏ –≤—ã–≥–æ–¥–Ω—ã–π –æ–±–º–µ–Ω –≤–∞–ª—é—Ç –ø–æ –ª—É—á—à–∏–º –∫—É—Ä—Å–∞–º –≤ –º—É–ª—å—Ç–∏–≤—Å–µ–ª–µ–Ω–Ω–æ–π"}
          </p>
          
          <div className="flex justify-center mb-8">
            <button 
              onClick={toggleRickMode}
              className="px-4 py-2 bg-[#220833] rounded-lg text-[#ff36ab] hover:bg-[#310b47] transition-all rickified-panel"
            >
              {rickMode ? "–°–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–¥—É" : "–†–∞—Å–∫—Ä—ã—Ç—å –ø—Ä–∞–≤–¥—É"}
            </button>
          </div>
          
          {/* –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ–±–º–µ–Ω–∞ */}
          <div className="max-w-2xl mx-auto bg-[#220833] p-6 rounded-lg shadow-lg rickified-panel mb-12 scan-lines">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* –û—Ç–¥–∞–µ—Ç–µ */}
              <div>
                <label className="block text-xl mb-4 font-mono text-[#5cff32]">
                  {rickMode ? "–û—Ç–¥–∞–µ—à—å —Å–≤–æ–∏ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–µ" : "–û—Ç–¥–∞–µ—Ç–µ"}
                </label>
                <input
                  type="number"
                  value={amount}
                  onChange={handleAmountChange}
                  className="w-full bg-[#1a0b26] border border-[#5cff32] rounded-lg p-3 mb-4 text-white focus:outline-none focus:ring focus:ring-[#5cff32] portal-input"
                />
                <select
                  value={fromCurrency}
                  onChange={(e) => setFromCurrency(e.target.value)}
                  className="w-full bg-[#1a0b26] border border-[#5cff32] rounded-lg p-3 text-white appearance-none focus:outline-none focus:ring focus:ring-[#5cff32] portal-select"
                >
                  {currencies.map((currency) => (
                    <option key={`from-${currency.code}`} value={currency.code}>
                      {currency.flag} {currency.name} ({currency.code})
                    </option>
                  ))}
                </select>
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –æ–±–º–µ–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π */}
              <div className="flex items-center justify-center md:justify-start md:pt-12">
                <button
                  onClick={swapCurrencies}
                  className="bg-[#5cff32] text-black p-3 rounded-full transform hover:rotate-180 transition-all focus:outline-none portal-pulse-btn"
                >
                  <FaExchangeAlt />
                </button>
              </div>

              {/* –ü–æ–ª—É—á–∞–µ—Ç–µ */}
              <div>
                <label className="block text-xl mb-4 font-mono text-[#5cff32]">
                  {rickMode ? "–ü–æ–ª—É—á–∞–µ—à—å –≤–µ–ª–∏–∫–∏–µ" : "–ü–æ–ª—É—á–∞–µ—Ç–µ"}
                </label>
                <input
                  type="number"
                  value={result.toFixed(4)}
                  readOnly
                  className="w-full bg-[#1a0b26] border border-[#ff36ab] rounded-lg p-3 mb-4 text-white focus:outline-none"
                />
                <select
                  value={toCurrency}
                  onChange={(e) => setToCurrency(e.target.value)}
                  className="w-full bg-[#1a0b26] border border-[#ff36ab] rounded-lg p-3 text-white appearance-none focus:outline-none focus:ring focus:ring-[#ff36ab] portal-select"
                >
                  {currencies.map((currency) => (
                    <option key={`to-${currency.code}`} value={currency.code}>
                      {currency.flag} {currency.name} ({currency.code})
                    </option>
                  ))}
                </select>
              </div>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ */}
            <div className="mt-6 p-4 bg-[#1a0b26] rounded-lg flex justify-between items-center">
              <div>
                <span className="text-gray-400">–ö—É—Ä—Å –æ–±–º–µ–Ω–∞:</span>
                <div className="text-xl text-[#5cff32]">
                  1 {fromCurrency} = {exchangeRates[fromCurrency]?.[toCurrency]?.toFixed(4) || 0} {toCurrency}
                  <span className="ml-2">
                    {getDirection(fromCurrency, toCurrency) === 'up' ? (
                      <FaArrowUp className="inline text-green-400" />
                    ) : (
                      <FaArrowDown className="inline text-red-400" />
                    )}
                  </span>
                </div>
              </div>
              <div>
                <span className="text-gray-400">–ö–æ–º–∏—Å—Å–∏—è:</span>
                <div className="text-xl text-[#5cff32]">
                  {rickMode ? "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è*" : "0%"}
                </div>
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –æ–±–º–µ–Ω–∞ */}
            <button 
              className="w-full bg-gradient-to-r from-[#5cff32] to-[#39c15b] text-black font-bold py-4 px-6 rounded-lg mt-6 hover:from-[#67ff45] hover:to-[#4ad56a] transition-all portal-btn-green portal-pulse-btn"
              onMouseEnter={() => setShowRickTip(true)}
              onMouseLeave={() => setShowRickTip(false)}
            >
              {rickMode ? "–û–±–º–µ–Ω—è—Ç—å (–∏ –æ—Ç–¥–∞—Ç—å —á–∞—Å—Ç—å –†–∏–∫—É)" : "–û–±–º–µ–Ω—è—Ç—å –≤–∞–ª—é—Ç—É"}
            </button>

            {/* Rick's –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
            {showRickTip && rickMode && (
              <div className="mt-4 text-xs text-[#ff36ab] italic">
                * –ö–æ–º–∏—Å—Å–∏—è –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç 10% –¥–æ 90%, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –†–∏–∫–∞ –∏ —Ñ–∞–∑—ã –ª—É–Ω—ã –≤ –∏–∑–º–µ—Ä–µ–Ω–∏–∏ C-137
              </div>
            )}
          </div>

          {/* –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω */}
          <div className="rickified-panel p-6 rounded-lg mb-8">
            <h2 className="text-2xl font-bold mb-4 portal-glow">
              {rickMode ? "–ú–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –ì—Ä–∞—Ñ–∏–∫–∏" : "–ì—Ä–∞—Ñ–∏–∫–∏ –≤–∞–ª—é—Ç"}
            </h2>
            
            {isChartLoading ? (
              <div className="h-[400px] flex items-center justify-center">
                <div className="portal-loading"></div>
              </div>
            ) : (
              <>
                {chartOptions && chartSeries && <Chart options={chartOptions} series={chartSeries} type="area" height={400} />}
              </>
            )}
            
            <div className="mt-4 flex justify-end">
              <div className="flex space-x-2">
                {['1h', '24h', '7d', '30d'].map((period) => (
                  <button
                    key={period}
                    onClick={() => setChartPeriod(period)}
                    className={`px-3 py-1.5 rounded-md text-sm ${
                      chartPeriod === period 
                        ? 'bg-[#5cff32] text-black' 
                        : 'bg-[#220833] text-white hover:bg-[#361052]'
                    }`}
                  >
                    {period}
                  </button>
                ))}
              </div>
            </div>
          </div>
          
          {/* –ú–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ */}
          <div className="rickified-panel p-6 rounded-lg mb-8">
            <h2 className="text-2xl font-bold mb-4 portal-glow flex items-center">
              <FaDatabase className="mr-2" /> –ú–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            </h2>
            <p className="mb-4 text-gray-400">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ—Ç–æ–∫–∏ –º–µ–∂–¥—É –∏–∑–º–µ—Ä–µ–Ω–∏—è–º–∏</p>
            
            <RickTransactions 
              maxTransactions={6}
              refreshInterval={rickMode ? 2500 : 5000}
              height={350}
              showControls={true}
              onSelectTransaction={handleTransactionSelect}
            />
          </div>

          {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
          <div className="rickified-panel p-6 rounded-lg mb-8">
            <h2 className="text-2xl font-bold mb-4 portal-glow">
              {rickMode ? "–ì–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏" : "–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"}
            </h2>
            
            {isLoading ? (
              <div className="h-20 flex items-center justify-center">
                <div className="portal-loading"></div>
              </div>
            ) : (
              <div className="h-[350px] overflow-y-auto">
                {/* –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ RickTransactions –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π */}
              </div>
            )}
          </div>

          <div className="max-w-4xl mx-auto mt-12 text-center">
            <p className="text-gray-400 text-sm">
              {rickMode 
                ? "–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à –æ–±–º–µ–Ω–Ω–∏–∫, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ç–µ–º, —á—Ç–æ –†–∏–∫ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è –ª—é–±—ã—Ö —Å–≤–æ–∏—Ö –±–µ–∑—É–º–Ω—ã—Ö –∑–∞—Ç–µ–π, –≤–∫–ª—é—á–∞—è (–Ω–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—è—Å—å): —Å–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã—Ö –≤–∏—Ä—É—Å–æ–≤, –º–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–æ–π–Ω—ã –∏ –ª–µ—Ç–Ω–∏–µ –±–∞—Ä–±–µ–∫—é." 
                : "–í—Å–µ –æ–±–º–µ–Ω—ã –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø–æ —Ç–µ–∫—É—â–∏–º —Ä—ã–Ω–æ—á–Ω—ã–º –∫—É—Ä—Å–∞–º. –ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥."}
            </p>
          </div>
        </div>
      </div>

      {/* –ü–æ—Ä—Ç–∞–ª–æ–≤—ã–π –∫—É—Ä—Å–æ—Ä */}
      <PortalCursor enabled={true} />

      {/* –ú–æ–¥–∞–ª–∫–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ */}
      {showTransactionDetails && selectedTransaction && (
        <div className="fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-80 backdrop-blur-sm portal-background">
          <div className="max-w-2xl w-full p-6 rickified-panel rounded-lg transform transition-all duration-300 animate-fade-in relative overflow-hidden shadow-[0_0_30px_rgba(92,255,50,0.3)]">
            {/* –§–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute inset-0 bg-portal-grid opacity-10 scan-lines"></div>
            
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –≤ —É–≥–ª—É */}
            <div className="absolute -top-4 -right-4 w-16 h-16 rounded-full bg-gradient-to-r from-[#5cff32] to-transparent opacity-30 animate-portal-pulse"></div>
            
            {/* –ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞ */}
            <div className="absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-transparent via-[#5cff32] to-transparent"></div>
            
            <h2 className="text-2xl font-bold mb-4 portal-glow flex items-center relative z-10">
              <span className="mr-2">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z" fill="#5cff32"/>
                  <path d="M15 12C15 13.66 13.66 15 12 15C10.34 15 9 13.66 9 12C9 10.34 10.34 9 12 9C13.66 9 15 10.34 15 12Z" fill="#5cff32"/>
                </svg>
              </span>
              –î–µ—Ç–∞–ª–∏ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
              {selectedTransaction.isShady && (
                <span className="ml-2 text-[#ff36ab]"><FaSkull /></span>
              )}
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏–∑–º–µ—Ä–µ–Ω–∏—è */}
              <span className="ml-auto text-sm font-mono bg-[#220833] px-2 py-1 rounded text-[#5cff32]">
                {selectedTransaction.isShady ? '–û–ü–ê–°–ù–û–ï –ò–ó–ú–ï–†–ï–ù–ò–ï' : '–ë–ï–ó–û–ü–ê–°–ù–û–ï –ò–ó–ú–ï–†–ï–ù–ò–ï'}
              </span>
            </h2>
            
            <div className="backdrop-blur-sm bg-[#220833] bg-opacity-70 p-4 rounded-lg mb-4 relative z-10">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <p className="text-gray-400 text-sm">ID –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</p>
                  <p className="font-mono text-white">{selectedTransaction.id}</p>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞:</p>
                  <p className="font-mono text-white">{new Date(selectedTransaction.timestamp).toLocaleString()}</p>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–ò–∑ –∏–∑–º–µ—Ä–µ–Ω–∏—è:</p>
                  <p className="text-white flex items-center">
                    <span className="inline-block w-3 h-3 rounded-full mr-2" style={{ backgroundColor: getDimensionColor(selectedTransaction.fromDimension) }}></span>
                    {getDimensionName(selectedTransaction.fromDimension)}
                  </p>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–í –∏–∑–º–µ—Ä–µ–Ω–∏–µ:</p>
                  <p className="text-white flex items-center">
                    <span className="inline-block w-3 h-3 rounded-full mr-2" style={{ backgroundColor: getDimensionColor(selectedTransaction.toDimension) }}></span>
                    {getDimensionName(selectedTransaction.toDimension)}
                  </p>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–°—É–º–º–∞:</p>
                  <p className="text-[#5cff32] font-mono text-lg">
                    {selectedTransaction.amount.toFixed(2)} {selectedTransaction.token}
                  </p>
                </div>
                <div>
                  <p className="text-gray-400 text-sm">–°—Ç–∞—Ç—É—Å:</p>
                  <p className={`${selectedTransaction.isShady ? "text-[#ff36ab]" : "text-[#5cff32]"} flex items-center`}>
                    {selectedTransaction.isShady ? (
                      <>
                        <span className="inline-block w-2 h-2 rounded-full bg-[#ff36ab] mr-2 animate-pulse"></span>
                        –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è
                      </>
                    ) : (
                      <>
                        <span className="inline-block w-2 h-2 rounded-full bg-[#5cff32] mr-2"></span>
                        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
                      </>
                    )}
                  </p>
                </div>
              </div>
            </div>
            
            <div className="mb-6 relative z-10">
              <p className="text-gray-400 text-sm mb-1">–û–ø–∏—Å–∞–Ω–∏–µ:</p>
              <p className="p-3 bg-[#1a0b26] rounded-lg text-white border border-[#361052]">{selectedTransaction.description}</p>
            </div>
            
            {rickMode && selectedTransaction.isShady && (
              <div className="mb-6 p-4 bg-[#2d0a1f] border border-[#ff36ab] rounded-lg relative overflow-hidden">
                <div className="absolute top-0 right-0 w-full h-full bg-[url('/noise.png')] opacity-10"></div>
                <p className="text-[#ff36ab] text-sm font-bold mb-2 flex items-center">
                  <svg width="16" height="16" viewBox="0 0 24 24" className="mr-2" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"/>
                  </svg>
                  –ö–û–ù–§–ò–î–ï–ù–¶–ò–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
                </p>
                <div className="bg-[#1a0b26] bg-opacity-50 p-3 rounded">
                  <p className="text-sm text-white">
                    –≠—Ç–æ—Ç —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ì–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 
                    –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Å–ª–µ–¥–æ–≤.
                  </p>
                  <div className="mt-2 p-2 border border-dashed border-[#ff36ab] bg-black bg-opacity-30 rounded">
                    <p className="text-xs text-[#ff36ab]">
                      "–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Å—è, –ú–æ—Ä—Ç–∏! –£ –º–µ–Ω—è –µ—Å—Ç—å –∫–≤–∞–Ω—Ç–æ–≤—ã–π –¥–µ—Ñ–ª–µ–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç –ª—é–±–æ–ø—ã—Ç–Ω—ã—Ö –≥–ª–∞–∑ –§–µ–¥–µ—Ä–∞—Ü–∏–∏." - –†–∏–∫ –°–∞–Ω—á–µ–∑, C-137
                    </p>
                  </div>
                </div>
              </div>
            )}
            
            <div className="flex justify-between relative z-10">
              <button 
                onClick={() => {
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Pickle Rick —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
                  if (Math.random() < 0.2) {
                    setShowPickleRick(true);
                    setTimeout(() => setShowPickleRick(false), 4000);
                  }
                  setShowTransactionDetails(false);
                }}
                className="p-3 bg-[#361052] hover:bg-[#4a1070] text-white rounded-lg portal-btn-pink"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
              
              {selectedTransaction.isShady && (
                <button 
                  onClick={() => {
                    // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∫—É—é-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
                    setShowTransactionDetails(false);
                    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Pickle Rick –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    setShowPickleRick(true);
                    setTimeout(() => setShowPickleRick(false), 5000);
                  }}
                  className="p-3 bg-gradient-to-r from-[#ff36ab] to-[#9900ff] text-white rounded-lg portal-btn-pink"
                >
                  –°–∫—Ä—ã—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
                </button>
              )}
            </div>
            
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—É–ª */}
            <div className="absolute bottom-2 left-2 text-[#5cff32] opacity-20 text-xs transform rotate-15">Œ£(C-137)¬≤</div>
            <div className="absolute top-2 right-10 text-[#5cff32] opacity-20 text-xs transform -rotate-15">‚à´‚àûdt</div>
          </div>
        </div>
      )}
      
      {/* Pickle Rick Easter Egg */}
      {showPickleRick && (
        <PickleRick
          trigger="auto"
          duration={5000}
          position="random"
          quotes={[
            "–Ø –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª —Å–µ–±—è –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞, –ú–æ—Ä—Ç–∏!",
            "–≠—Ç–∏ —Ü–µ–Ω—ã... *–æ—Ç—Ä—ã–∂–∫–∞*... –ø—Ä–æ—Å—Ç–æ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ!",
            "–ü–æ–∫—É–ø–∞–π Flurbos, –ø—Ä–æ–¥–∞–≤–∞–π Federation Credits! –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–æ–≤–µ—Ç –¥–Ω—è!",
            "–¢—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å Mega Seeds! –ö—É–ø–∏ –ø–æ –º–∞–∫—Å–∏–º—É–º—É!",
            "–õ—é–±–∏—à—å —Ä–∏—Å–∫–æ–≤–∞—Ç—å? –¢–æ–≥–¥–∞ –≤–∫–ª–∞–¥—ã–≤–∞–π—Å—è –≤ Blips and Chitz - –ø–∞—Ä–∫ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π –≤—Å–µ–≥–¥–∞ –≤ —Ç—Ä–µ–Ω–¥–µ!"
          ]}
        />
      )}

      <style jsx global>{`
        .portal-input {
          position: relative;
          transition: all 0.3s ease;
        }
        
        .portal-input:focus {
          box-shadow: 0 0 15px rgba(92, 255, 50, 0.7);
        }
        
        .portal-select {
          position: relative;
          transition: all 0.3s ease;
        }
        
        .portal-select:focus {
          box-shadow: 0 0 15px rgba(92, 255, 50, 0.7);
        }
        
        @keyframes pulse-border {
          0% { box-shadow: 0 0 0 0 rgba(92, 255, 50, 0.7); }
          70% { box-shadow: 0 0 0 10px rgba(92, 255, 50, 0); }
          100% { box-shadow: 0 0 0 0 rgba(92, 255, 50, 0); }
        }
        
        @keyframes pulse-slow {
          0% { opacity: 0.1; }
          50% { opacity: 0.2; }
          100% { opacity: 0.1; }
        }
      `}</style>
    </div>
  );
};

export default ExchangePage; 